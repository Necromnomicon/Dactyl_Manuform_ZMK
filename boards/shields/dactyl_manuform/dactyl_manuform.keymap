#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define DEFAULT 0
#define ENGRAM 1
#define NUMNAV 3
#define FUNCT 4
#define GAME 5

/ {
 behaviors {
        hml: left_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <7 8 9 10 11 12 19 20 21 22 23 24 31 32 33 34 35 36 43 44 45 46 47 48 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68>;
            hold-trigger-on-release;
        };

        hmr: right_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <1 2 3 4 5 6 13 14 15 16 17 18 25 26 27 28 29 30 37 38 39 40 41 42 49 50 51 52 57 58 59 60 61 62 63 64 65 66 67 68>;
            hold-trigger-on-release;
        };
    
        //tap: question mark | Shift + tap: exclimation mark
        qexcl: question_exclimation {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp QMARK>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSHFT)>;
        };

        //tap: dot | shift+tap: colon    
        dcol: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            #bindings-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSHFT)>;
        };

        //tap: comma | shift+tap: semicolon    
        cosem: com_semi {
            compatible = "zmk,behavior-mod-morph";
            #bindings-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSHFT)>;
        };

        //tap: apostrophe | shift+tap: lessthan    
        apolt: apostrophe_lessthan {
            compatible = "zmk,behavior-mod-morph";
            #bindings-cells = <0>;
            bindings = <&kp APOS>, <&kp LESS_THAN>;
            mods = <(MOD_LSFT|MOD_RSHFT)>;
        };
    
        //tap: quotes | shift+tap: greater than    
        quogt: quote_greaterthan {
            compatible = "zmk,behavior-mod-morph";
            #bindings-cells = <0>;
            bindings = <&kp DOUBLE_QUOTES>, <&kp GREATER_THAN>;
            mods = <(MOD_LSFT|MOD_RSHFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp MINUS    &kp N1    &kp N2       &kp N3        &kp N4         &kp N5           &kp N6    &kp N7         &kp N8        &kp N9       &kp N0    &kp EQUAL     
                &kp TAB      &kp Q     &kp W        &kp F         &kp P          &kp B            &kp J     &kp L          &kp U         &kp Y        &kp APOS  &kp BSLH
                &kp ESC      &kp A     &hml LALT R  &hml LCTRL S  &hml LSHIFT T  &kp G            &kp M     &hmr LSHIFT N  &hmr LCTRL E  &hmr LALT I  &kp O     &kp SEMI   
                &kp LGUI     &kp Z     &kp X        &kp C         &kp D          &kp V            &kp K     &kp H          &kp COMMA     &kp DOT      &kp SLASH &kp EXCL     
                &kp GRAVE    &kp BSLH  &kp END      &kp HOME                                                               &kp LPAR      &kp LBKT     &kp RBKT  &kp RPAR     
                                                    &kp DEL &sk LSHIFT &kp BSPC                       &kp TAB   &kp SPACE  &kp ENTER
                                                    &mo NUMNAV &kp UP  &kp DOWN                       &kp LEFT  &kp RIGHT  &mo NUMNAV
            >;
        };

        engram_layer {
            bindings = <
                &kp MINUS    &kp N1    &kp N2       &kp N3        &kp N4         &kp N5           &kp N6    &kp N7         &kp N8        &kp N9       &kp N0    &kp EQUAL     
                &kp TAB      &kp B     &kp Y        &kp O         &kp U          &apolt           &quogt    &kp L          &kp D         &kp W        &kp V     &kp Z
                &kp ESC      &kp C     &hml LALT I  &hml LCTRL E  &hml LSHIFT A  &cosem           &dcol     &hmr LSHIFT H  &hmr LCTRL T  &hmr LALT S  &kp N     &kp Q   
                &kp LGUI     &kp G     &kp H        &kp J         &kp K          &kp MINUS        &qexcl    &kp R          &kp M         &kp F        &kp P     &kp EXCL     
                &kp GRAVE    &kp BSLH  &kp END      &kp HOME                                                               &kp LPAR      &kp LBKT     &kp RBKT  &kp RPAR     
                                                    &kp DEL &sk LSHIFT &kp BSPC                       &kp TAB   &kp SPACE  &kp ENTER
                                                    &mo NUMNAV &kp UP  &kp DOWN                       &kp LEFT  &kp RIGHT  &mo NUMNAV
            >;
        };


        numnav_layer {
            bindings = <
                &kp F12      &kp F1    &kp F2    &kp F3    &kp F4    &kp N5                         &kp F6    &kp F7    &kp F8    &kp F9    &kp F10   &kp F11      
                &kp TAB      &kp PG_UP &kp HOME  &kp UP    &kp END   &kp C_VOL_UP                   &kp PRCNT &kp N7    &kp N8    &kp N9    &kp COLON &kp K   
                &mo FUNCT    &kp PG_DN &kp LEFT  &kp DOWN  &kp RIGHT &kp C_VOL_DN                   &kp PLUS  &kp N4    &kp N5    &kp N6    &kp MINUS &kp J     
                &none        &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &kp K_APP                      &kp STAR  &kp N1    &kp N2    &kp N3    &trans    &kp LS(G)  
                &tog GAME    &none     &none     &none                                                                  &kp N0    &kp COMMA &kp DOT   &kp DLLR     
                                                    &kp DEL &sk LSHIFT &kp BSPC                       &kp TAB   &kp SPACE  &kp ENTER
                                                    &mo NUMNAV &kp UP  &kp DOWN                       &kp LEFT  &kp RIGHT  &mo NUMNAV
            >;
        };

        funct_layer {
            bindings = <
                &soft_off &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3  &none            &none  &none     &none     &none     &none     &soft_off    
                &none        &none     &none     &none     &none     &bootloader                  &bootloader &none     &none     &none     &none     &none    
                &trans       &none     &none     &none     &none     &none                          &none     &none     &none     &none     &none     &none  
                &none        &none     &none     &none     &none     &sys_reset                     &sys_reset &none     &none     &none     &none     &none        
                &none        &none     &bt BT_CLR &bt BT_CLR_ALL                                                        &none     &none     &none     &none        
                                                    &kp DEL &sk LSHIFT &kp BSPC                       &kp TAB   &kp SPACE  &kp ENTER
                                                    &mo NUMNAV &kp UP  &kp DOWN                       &kp LEFT  &kp RIGHT  &mo NUMNAV
            >;
        };

        game_layer {
            bindings = <
                &kp ESC      &kp N1    &kp N2    &kp N3    &kp N4    &kp N5                         &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp BSLH     
                &kp TAB      &kp T     &kp Q     &kp W     &kp E     &kp R                               &kp J     &kp L     &kp U     &kp Y     &kp APOS  &kp BSPC
                &kp LCTRL    &kp G     &kp A     &kp S     &kp D     &kp F                               &kp M     &kp N     &kp E     &kp I     &kp O     &kp ENTER   
                &kp LSHIFT   &kp B     &kp Z     &kp X     &kp C     &kp V                               &kp K     &kp H     &kp COMMA &kp DOT   &kp SLASH &kp RSHIFT     
                &kp LALT     &kp M     &kp N     &kp O                                                                       &none     &none     &none     &tog GAME
                                                 &kp LSHIFT &kp SPACE &kp ENTER                &kp BSPC  &kp SPACE  &mo NUMNAV
                                                 &none     &kp LCTRL  &kp LALT                      &kp DEL   &kp TAB &none       
            >;
        };
    };
};
