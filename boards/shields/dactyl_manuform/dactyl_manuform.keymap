#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define DEFAULT 0
#define NUMNAV 1
#define FUNCT 2
#define GAME 3
#define FGAME 4


&soft_off {
    hold-time-ms = <5000>; // Only turn off it the key is held for 5 seconds or longer.
};

// key posiitons 
// |0  1  2  3  4  5  6  |   |  7  8  9 10 11 12 13 |  
// |14 15 16 17 18 19 20 |   | 21 22 23 24 25 26 27 |
// |28 29 30 31 32 33 34 |   | 35 36 37 38 39 40 41 |
// |42 43 44 45 46 47 |          |48 49 50 51 52 53 |
//    |54 55 |                         |56 57 |      
//        |58 59 60|            |61 62 63|
//        |64 65 66|            |67 68 69|

/ {
    behaviors {

        hml: left_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <7 8 9 10 11 12 13 21 22 23 24 25 26 27 35 36 37 38 39 40 41 48 49 50 51 52 53 54 56 57 61 62 63 67 68 69>;
            hold-trigger-on-release;
        };

        hmr: right_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 14 15 16 17 18 19 20 28 29 30 31 32 33 34 42 43 44 45 46 47 55 56 58 59 60 64 65 66>;
            hold-trigger-on-release;
        };

        //tap: question mark | Shift + tap: exclimation mark
        qexcl: question_exclimation {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp QMARK>, <&kp EXCL>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

      //tap: dot | shift+tap: colon    
        dcol: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        //tap: comma | shift+tap: semicolon    
        cosem: com_semi {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    //combo to trigger GAME layer. 
    combos {
          compatible = "zmk,combos";
         
          combo_game {
            timeout-ms = <50>;
            key-positions = <56 57>;
            bindings = <&tog GAME>;

          };

          combo_funct {
            timeout-ms = <50>;
            key-positions = <54 55>;
            bindings = <&tog FUNCT>;
          };

          combo_softoff1 {
            timeout-ms = <50>;
            key-positions = <0 1>;
            layers = <0>;
            require-prior-idle-ms = <150>;
            bindings = <&soft_off>;
          };

          combo_softoff2 {
            timeout-ms = <50>;
            key-positions = <12 13>;
            layers = <0>;
            require-prior-idle-ms = <150>;
            bindings = <&soft_off>;
          };
      };
    

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp GRAVE    &kp N1    &kp N2       &kp N3        &kp N4         &kp N5 &kp EQUAL      &kp MINUS    &kp N6    &kp N7         &kp N8        &kp N9       &kp N0    &kp BSPC     
                &kp TAB      &kp Q     &kp W        &kp F         &kp P          &kp B  &kp LPAR       &kp RPAR     &kp J     &kp L          &kp U         &kp Y        &kp APOS  &kp BSLH
                &kp ESC      &kp A     &hml LALT R  &hml LCTRL S  &hml LSHIFT T  &kp G  &kp LBKT       &kp RBKT     &kp M     &hmr LSHIFT N  &hmr LCTRL E  &hmr LALT I  &kp O     &kp SEMI   
                &kp LGUI     &kp Z     &kp X        &kp C         &kp D          &kp V                              &kp K     &kp H          &kp COMMA     &kp DOT      &kp SLASH &kp RGUI     
                                       &kp END      &kp HOME                                                                  &kp PG_UP      &kp PG_DN     
                                                                 &kp DEL &sk LSHIFT &kp BSPC          &kp TAB &hmr RSHIFT SPACE &kp ENTER
                                                                 &mo NUMNAV &kp LEFT  &kp RIGHT       &kp UP  &kp DOWN  &mo NUMNAV
            >;
        };

        numnav_layer {
            bindings = <
                &kp F12      &kp N6    &kp N7    &kp N8    &kp N9    &kp N0       &kp LBRC       &kp RBRC     &kp F6    &kp F7    &kp F8    &kp F9    &kp F10   &kp F11      
                &kp TAB      &kp PG_UP &kp HOME  &kp UP    &kp END   &kp C_VOL_UP &kp LBKT       &kp RBKT     &kp PRCNT &kp N7    &kp N8    &kp N9    &kp COLON &kp K   
                &kp ESC      &kp PG_DN &kp LEFT  &kp DOWN  &kp RIGHT &kp C_VOL_DN &kp LPAR       &kp RPAR     &kp PLUS  &kp N4    &kp N5    &kp N6    &kp STAR  &kp J     
                &tog FUNCT   &kp LC(Z) &kp LC(X) &kp LC(C) &kp LC(V) &kp K_APP                                &kp MINUS &kp N1    &kp N2    &kp N3    &kp SLASH &kp ENTER  
                                       &none     &none                                                                            &kp LS(G) &kp COMMA 
                                                    &kp DEL &sk LSHIFT &kp BSPC        &kp TAB   &hmr RSHIFT SPACE  &kp N0
                                                    &mo NUMNAV &kp LEFT  &kp RIGHT     &kp UP  &kp DOWN  &mo NUMNAV
            >;
        };

        funct_layer {
            bindings = <
                &soft_off    &kp X     &none     &none     &none     &none &bt BT_SEL 0       &bt BT_SEL 0 &none     &none     &none     &none     &kp Y     &soft_off    
                &none        &none     &none     &none     &none     &none &bt BT_SEL 1       &bt BT_SEL 1 &none     &none     &none     &none     &none     &none    
                &tog GAME    &none     &none     &none     &none     &none &bt BT_SEL 2       &bt BT_SEL 2 &none     &none     &none     &none     &none     &tog GAME
                &tog FUNCT   &none     &bt BT_CLR &bt BT_CLR_ALL     &bootloader &sys_reset             &sys_reset &bootloader &bt BT_CLR_ALL &bt BT_CLR     &none     &tog FUNCT        
                                       &none     &none                                                   &none     &none     
                                                    &kp DEL &sk LSHIFT &kp BSPC                       &kp TAB   &hmr RSHIFT SPACE  &kp ENTER
                                                    &mo NUMNAV &kp LEFT  &kp RIGHT                    &kp UP  &kp DOWN  &mo NUMNAV
            >;
        };

        game_layer {
            bindings = <
                &kp ESC      &kp N1    &kp N2    &kp N3    &kp N4    &kp N5  &kp N6       &none     &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp BSLH     
                &kp TAB      &kp T     &kp Q     &kp W     &kp E     &kp R   &kp N7       &none     &kp Y     &kp U     &kp I     &kp O     &kp APOS  &kp BSPC
                &kp I        &kp G     &kp A     &kp S     &kp D     &kp F   &kp N8       &none     &kp H     &kp J     &kp K     &kp L     &kp SEMI     &kp ENTER   
                &kp M        &kp B     &kp Z     &kp X     &kp C     &kp V                        &kp N     &kp M     &kp COMMA &kp DOT   &kp SLASH &kp RSHIFT     
                                       &kp N9    &kp N0                                                                       &none     &tog GAME     
                                                 &kp LSHIFT &kp SPACE &kp ENTER                &kp BSPC  &kp SPACE  &mo NUMNAV
                                                 &sl FGAME  &kp LCTRL  &kp LALT                      &kp DEL   &kp TAB &none       
            >;
        };

        fgame_layer {
            bindings = <
                &kp ESC    &kp F1    &kp F2    &kp F3    &kp F4    &kp F5 &kp F6       &none   &none     &none     &none     &none     &none     &none      
                &kp BSPC   &kp P     &kp O     &kp I     &kp U     &kp Y  &kp F7       &none   &none     &none     &none     &none     &none     &none      
                &kp ENTER  &kp M     &kp L     &kp K     &kp J     &kp H  &kp F8       &none   &none     &none     &none     &none     &none     &none      
                &kp F6     &kp F11   &kp F12   &kp N     &kp N     &kp SLASH                   &none     &none     &none     &none     &none     &none                                      
                                     &kp F9     &kp F10                                                                       &none     &tog GAME     
                                                 &kp LSHIFT &kp SPACE &kp ENTER                &kp BSPC  &kp SPACE  &mo NUMNAV
                                                 &trans     &kp LCTRL  &kp LALT                      &kp DEL   &kp TAB &none       
            >;
        };
    };
};
